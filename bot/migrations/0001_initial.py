# Generated by Django 5.1.2 on 2025-04-20 10:23

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('link', models.URLField()),
                ('reward', models.DecimalField(decimal_places=2, default=20.0, max_digits=10)),
                ('task_type', models.CharField(choices=[('telegram', 'Telegram'), ('whatsapp', 'WhatsApp'), ('youtube', 'YouTube'), ('google', 'Google'), ('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('tiktok', 'TikTok'), ('other', 'Other')], default='other', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelJoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.channel')),
            ],
        ),
        migrations.CreateModel(
            name='TaskCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_title', models.CharField(blank=True, max_length=200, null=True)),
                ('task_reward', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.task')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True)),
                ('first_name', models.CharField(default='Unknown', max_length=200)),
                ('balance', models.DecimalField(decimal_places=2, default=10.0, max_digits=10)),
                ('affiliate_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('task_balance', models.DecimalField(decimal_places=2, default=10.0, max_digits=10)),
                ('profile_photo_url', models.URLField(blank=True, null=True)),
                ('referral_bonus', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('referrer_rewarded', models.BooleanField(default=False)),
                ('is_subscribed', models.BooleanField(default=False)),
                ('is_activated', models.BooleanField(default=False)),
                ('pin_hash', models.CharField(blank=True, max_length=200, null=True)),
                ('pin_set', models.BooleanField(default=False)),
                ('failed_pin_attempts', models.IntegerField(default=0)),
                ('last_pin_attempt', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('completed_tasks', models.ManyToManyField(blank=True, through='bot.TaskCompletion', to='bot.task')),
                ('joined_channels', models.ManyToManyField(blank=True, related_name='subscribed_users', through='bot.ChannelJoin', to='bot.channel')),
                ('referrer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='bot.user')),
            ],
        ),
        migrations.AddField(
            model_name='taskcompletion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.user'),
        ),
        migrations.AddField(
            model_name='channeljoin',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.user'),
        ),
        migrations.CreateModel(
            name='ActivationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.user')),
            ],
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bank', models.CharField(max_length=100)),
                ('bank_code', models.CharField(default='', max_length=20)),
                ('account_number', models.CharField(max_length=10)),
                ('account_name', models.CharField(max_length=100)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to='bot.user')),
            ],
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bank_code', models.CharField(max_length=10)),
                ('account_number', models.CharField(max_length=10)),
                ('account_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('narration', models.CharField(blank=True, max_length=100)),
                ('failure_reason', models.TextField(blank=True)),
                ('withdrawal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payout', to='bot.withdrawal')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='taskcompletion',
            unique_together={('user', 'task')},
        ),
        migrations.AlterUniqueTogether(
            name='channeljoin',
            unique_together={('user', 'channel')},
        ),
    ]
